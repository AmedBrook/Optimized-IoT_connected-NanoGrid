

# IMPORTING LIBRARIES.
from flask import Flask, render_template
from pulp import *
import plotly
import plotly.express as px
import pandas as pd
import json
from models.Ometeor import *

# EXTRACTING LISTS FROM LP VARIABLES
P_list = []
for v in Optim.variables():
  for i in V_steps:
    if v.name == ('P_'+ str(i)):
      P_list.append(v.varValue)

P_load_list = []
for v in Optim.variables():
  for i in V_steps:
    if v.name == ('P_load_'+ str(i)):
      P_load_list.append(v.varValue)

P_to_bat_list = []
for v in Optim.variables():
  for i in V_steps:
    if v.name == ('P_to_bat_'+ str(i)):
      P_to_bat_list.append(v.varValue)

P_From_bat_list = []
for v in Optim.variables():
  for i in V_steps:
    if v.name == ('P_From_bat_'+ str(i)):
      P_From_bat_list.append(v.varValue)

Q_bat_list = []
for v in Optim.variables():
  for i in V_steps:
    if v.name == ('Q_bat_'+ str(i)):
      Q_bat_list.append(v.varValue)

FOC_list = []
for v in Optim.variables():
  for i in V_steps:
    if v.name == ('FOC_'+ str(i)):
      FOC_list.append(v.varValue/10**5)

d_load_list = []              
for i in V_steps:
    d_load_list.append(L[i])



##################################################################


app = Flask(__name__)

@app.route('/Energy_dash')
def Energy_dash(): 
    
# POWER GENERATED BY THE GENSET.(Chart 1)    
    P_dframe = {
             'Power generated by the Genset.': P_list,
             'Scale' : P_list}

    P_A_df = pd.DataFrame(P_dframe)
    fig = px.bar(P_A_df, x = V_steps,
             y = P_list,
             title = '________Power Generated By The Genset A._________',
             labels = dict(x = "Time Step (h)", y = "Power(kw)"), text_auto = True)
             
    graphJSON1 = json.dumps(fig, cls=plotly.utils.PlotlyJSONEncoder)


#--------------------------------------------------------------------------------#
     

# POWER FROM THE GENSET TO LOAD.(Chart 2)   
    P_to_load_dframe = {
             "Power from Genset to laod.": P_load_list,
             'Scale' : P_load_list}

    P_to_load_df = pd.DataFrame(P_to_load_dframe)


    fig = px.bar(P_to_load_df, x = V_steps,
             y = P_load_list,
             title = '_________Power Transfered From The Genset To Load.________',
             labels = dict(x = "Time Step (h)", y = "Power(kw)"), text_auto = True)
    graphJSON2 = json.dumps(fig, cls=plotly.utils.PlotlyJSONEncoder)

    return render_template('dashboard.html', graphJSON2=graphJSON2, graphJSON1=graphJSON1)



if __name__=='__main__': 
    app.run(port=8080)